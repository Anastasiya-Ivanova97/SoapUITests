<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="d839fb75-2100-4ea0-9d04-539865ccb4f1" created="3.2.0" activeEnvironment="Default environment" name="SOAP" updated="3.2.0 2020-04-06T18:44:59Z" encryptionMode="Not encrypted" resourceRoot="" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Report Format(s)" value="XML"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Slack Channel(s)" value=""/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Test Suite Tags" value=""/>
  <con:entry key="Select Report Type" value="JUnit-Style report for automation"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Test Suite" value="SoapWSImplPortBinding TestSuite"/>
  <con:entry key="Run in-process" value="false"/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Test Case Tags" value=""/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Test Case" value="&lt;all>"/>
  <con:entry key="Slack Access Token" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value="/Applications/ReadyAPI-3.2.0.app/Contents/Resources/app/bin"/>
  <con:entry key="Environment" value="Default environment"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting>
  </con:settings>
  <con:interface xsi:type="con:WsdlInterface" id="3f19a56a-23ea-4f44-9560-ef2f151ca482" wsaVersion="NONE" name="SoapWSImplPortBinding" type="wsdl" bindingName="{http://apiPractice.aplana.com/}SoapWSImplPortBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:9088/wss/profiles?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart="http://localhost:9088/wss/profiles?wsdl">
      <con:part>
        <con:url>http://localhost:9088/wss/profiles?wsdl</con:url>
        <con:content><![CDATA[<!--Published by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.2.9-b130926.1035 svn-revision#5f6196f2b90e9460065a4c2f4e30e065b245e51e.-->
<!--Generated by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.2.9-b130926.1035 svn-revision#5f6196f2b90e9460065a4c2f4e30e065b245e51e.-->
<definitions targetNamespace="http://apiPractice.aplana.com/" name="SoapWSImplService" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://apiPractice.aplana.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <xsd:schema>
      <xsd:import namespace="http://apiPractice.aplana.com/" schemaLocation="http://localhost:9088/wss/profiles?xsd=1"/>
    </xsd:schema>
  </types>
  <message name="getWelcomeMessage">
    <part name="parameters" element="tns:getWelcomeMessage"/>
  </message>
  <message name="getWelcomeMessageResponse">
    <part name="parameters" element="tns:getWelcomeMessageResponse"/>
  </message>
  <message name="getProfileList">
    <part name="parameters" element="tns:getProfileList"/>
  </message>
  <message name="getProfileListResponse">
    <part name="parameters" element="tns:getProfileListResponse"/>
  </message>
  <message name="getProfile">
    <part name="parameters" element="tns:getProfile"/>
  </message>
  <message name="getProfileResponse">
    <part name="parameters" element="tns:getProfileResponse"/>
  </message>
  <message name="addProfile">
    <part name="parameters" element="tns:addProfile"/>
  </message>
  <message name="addProfileResponse">
    <part name="parameters" element="tns:addProfileResponse"/>
  </message>
  <message name="removeProfile">
    <part name="parameters" element="tns:removeProfile"/>
  </message>
  <message name="removeProfileResponse">
    <part name="parameters" element="tns:removeProfileResponse"/>
  </message>
  <message name="getTaskKey">
    <part name="parameters" element="tns:getTaskKey"/>
  </message>
  <message name="getTaskKeyResponse">
    <part name="parameters" element="tns:getTaskKeyResponse"/>
  </message>
  <portType name="SoapWS">
    <operation name="getWelcomeMessage">
      <input wsam:Action="http://apiPractice.aplana.com/SoapWS/getWelcomeMessageRequest" message="tns:getWelcomeMessage"/>
      <output wsam:Action="http://apiPractice.aplana.com/SoapWS/getWelcomeMessageResponse" message="tns:getWelcomeMessageResponse"/>
    </operation>
    <operation name="getProfileList">
      <input wsam:Action="http://apiPractice.aplana.com/SoapWS/getProfileListRequest" message="tns:getProfileList"/>
      <output wsam:Action="http://apiPractice.aplana.com/SoapWS/getProfileListResponse" message="tns:getProfileListResponse"/>
    </operation>
    <operation name="getProfile">
      <input wsam:Action="http://apiPractice.aplana.com/SoapWS/getProfileRequest" message="tns:getProfile"/>
      <output wsam:Action="http://apiPractice.aplana.com/SoapWS/getProfileResponse" message="tns:getProfileResponse"/>
    </operation>
    <operation name="addProfile">
      <input wsam:Action="http://apiPractice.aplana.com/SoapWS/addProfileRequest" message="tns:addProfile"/>
      <output wsam:Action="http://apiPractice.aplana.com/SoapWS/addProfileResponse" message="tns:addProfileResponse"/>
    </operation>
    <operation name="removeProfile">
      <input wsam:Action="http://apiPractice.aplana.com/SoapWS/removeProfileRequest" message="tns:removeProfile"/>
      <output wsam:Action="http://apiPractice.aplana.com/SoapWS/removeProfileResponse" message="tns:removeProfileResponse"/>
    </operation>
    <operation name="getTaskKey">
      <input wsam:Action="http://apiPractice.aplana.com/SoapWS/getTaskKeyRequest" message="tns:getTaskKey"/>
      <output wsam:Action="http://apiPractice.aplana.com/SoapWS/getTaskKeyResponse" message="tns:getTaskKeyResponse"/>
    </operation>
  </portType>
  <binding name="SoapWSImplPortBinding" type="tns:SoapWS">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <operation name="getWelcomeMessage">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getProfileList">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getProfile">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="addProfile">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="removeProfile">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getTaskKey">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="SoapWSImplService">
    <port name="SoapWSImplPort" binding="tns:SoapWSImplPortBinding">
      <soap:address location="http://localhost:9088/wss/profiles"/>
    </port>
  </service>
</definitions>]]></con:content>
        <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
      </con:part>
      <con:part>
        <con:url>http://localhost:9088/wss/profiles?xsd=1</con:url>
        <con:content><![CDATA[<!--Published by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.2.9-b130926.1035 svn-revision#5f6196f2b90e9460065a4c2f4e30e065b245e51e.-->
<xs:schema version="1.0" targetNamespace="http://apiPractice.aplana.com/" xmlns:tns="http://apiPractice.aplana.com/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="AddProfileRq" type="tns:ProfileRq_Type"/>
  <xs:element name="Profile" type="tns:Profile_Type"/>
  <xs:element name="addProfile" type="tns:addProfile"/>
  <xs:element name="addProfileResponse" type="tns:addProfileResponse"/>
  <xs:element name="getProfile" type="tns:getProfile"/>
  <xs:element name="getProfileList" type="tns:getProfileList"/>
  <xs:element name="getProfileListResponse" type="tns:getProfileListResponse"/>
  <xs:element name="getProfileResponse" type="tns:getProfileResponse"/>
  <xs:element name="getTaskKey" type="tns:getTaskKey"/>
  <xs:element name="getTaskKeyResponse" type="tns:getTaskKeyResponse"/>
  <xs:element name="getWelcomeMessage" type="tns:getWelcomeMessage"/>
  <xs:element name="getWelcomeMessageResponse" type="tns:getWelcomeMessageResponse"/>
  <xs:element name="removeProfile" type="tns:removeProfile"/>
  <xs:element name="removeProfileResponse" type="tns:removeProfileResponse"/>
  <xs:complexType name="getProfileList">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getProfileListResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:Profile_Type" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Profile_Type">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="SurName" type="xs:string"/>
      <xs:element name="Name" type="xs:string"/>
      <xs:element name="SecondName" type="xs:string" minOccurs="0"/>
      <xs:element name="Birthday" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="Phone" type="xs:long" minOccurs="0"/>
      <xs:element name="E-mail" type="xs:string"/>
      <xs:element name="Position" type="xs:string" minOccurs="0"/>
      <xs:element name="StartDate" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="ProbationFinishedFlag" type="xs:boolean" minOccurs="0"/>
      <xs:element name="projectList" type="tns:Project" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Project">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="Name" type="xs:string"/>
      <xs:element name="Description" type="xs:string" minOccurs="0"/>
      <xs:element name="StartDate" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="EndDate" type="xs:dateTime" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getProfile">
    <xs:sequence>
      <xs:element name="arg0" type="xs:long" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getProfileResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:Profile_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getTaskKey">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="getTaskKeyResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeProfile">
    <xs:sequence>
      <xs:element name="arg0" type="xs:long" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeProfileResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getWelcomeMessage">
    <xs:sequence>
      <xs:element name="Name" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getWelcomeMessageResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addProfile">
    <xs:sequence>
      <xs:element name="ProfileRq" type="tns:ProfileRq_Type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ProfileRq_Type">
    <xs:sequence>
      <xs:element name="SurName" type="xs:string"/>
      <xs:element name="Name" type="xs:string"/>
      <xs:element name="SecondName" type="xs:string" minOccurs="0"/>
      <xs:element name="Birthday" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="Phone" type="xs:string" minOccurs="0"/>
      <xs:element name="E-mail" type="xs:string"/>
      <xs:element name="Position" type="xs:string" minOccurs="0"/>
      <xs:element name="Projects" type="tns:Project" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addProfileResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
    </con:definitionCache>
    <con:endpoints>
      <con:endpoint>http://localhost:9088/wss/profiles</con:endpoint>
    </con:endpoints>
    <con:operation id="ac80b64c-653c-48d6-9f7c-23c8119d9260" isOneWay="false" action="" name="addProfile" bindingOperationName="addProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="f46a6b30-017c-4661-8933-10b2fe655da9" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:9088/wss/profiles</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:apip="http://apiPractice.aplana.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <apip:addProfile>
         <!--Optional:-->
         <ProfileRq>
            <SurName>?</SurName>
            <Name>?</Name>
            <!--Optional:-->
            <SecondName>?</SecondName>
            <!--Optional:-->
            <Birthday>?</Birthday>
            <!--Optional:-->
            <Phone>?</Phone>
            <E-mail>?</E-mail>
            <!--Optional:-->
            <Position>?</Position>
            <!--Zero or more repetitions:-->
            <Projects>
               <id>?</id>
               <Name>?</Name>
               <!--Optional:-->
               <Description>?</Description>
               <!--Optional:-->
               <StartDate>?</StartDate>
               <!--Optional:-->
               <EndDate>?</EndDate>
            </Projects>
         </ProfileRq>
      </apip:addProfile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://apiPractice.aplana.com/SoapWS/addProfileRequest"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    </con:operation>
    <con:operation id="44a1b4d9-d77f-4152-96f8-3eb3ed914cd6" isOneWay="false" action="" name="getProfile" bindingOperationName="getProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="54e94f55-4c9c-4049-826c-8696bc44fe2f" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:9088/wss/profiles</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:apip="http://apiPractice.aplana.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <apip:getProfile>
         <!--Optional:-->
         <arg0>?</arg0>
      </apip:getProfile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://apiPractice.aplana.com/SoapWS/getProfileRequest"/>
      </con:call>
    </con:operation>
    <con:operation id="9a7f647b-6170-4f87-8116-a9a3f71be151" isOneWay="false" action="" name="getProfileList" bindingOperationName="getProfileList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="d0b74cf0-eaa8-459c-82e3-a3b0851592ce" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:9088/wss/profiles</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:apip="http://apiPractice.aplana.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <apip:getProfileList/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://apiPractice.aplana.com/SoapWS/getProfileListRequest"/>
      </con:call>
    </con:operation>
    <con:operation id="8acb0eee-6b74-4952-b903-aa3459e2cc59" isOneWay="false" action="" name="getTaskKey" bindingOperationName="getTaskKey" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="4c59a7d0-e868-4c7c-b05e-7968f69d272c" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:9088/wss/profiles</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:apip="http://apiPractice.aplana.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <apip:getTaskKey/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://apiPractice.aplana.com/SoapWS/getTaskKeyRequest"/>
      </con:call>
    </con:operation>
    <con:operation id="ad7263e2-920f-4ba6-883e-4a445ccb4fd6" isOneWay="false" action="" name="getWelcomeMessage" bindingOperationName="getWelcomeMessage" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="559b4101-4640-42f7-b5b0-e0c1011ef02e" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:9088/wss/profiles</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:apip="http://apiPractice.aplana.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <apip:getWelcomeMessage>
         <!--Optional:-->
         <Name>?</Name>
      </apip:getWelcomeMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://apiPractice.aplana.com/SoapWS/getWelcomeMessageRequest"/>
      </con:call>
    </con:operation>
    <con:operation id="367848de-efe6-4337-803a-75b817035adf" isOneWay="false" action="" name="removeProfile" bindingOperationName="removeProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="2ae6709d-2ef7-424c-9ed2-2a3d49387f32" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:9088/wss/profiles</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:apip="http://apiPractice.aplana.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <apip:removeProfile>
         <!--Optional:-->
         <arg0>?</arg0>
      </apip:removeProfile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://apiPractice.aplana.com/SoapWS/removeProfileRequest"/>
      </con:call>
    </con:operation>
  </con:interface>
  <con:testSuite id="96d2abe3-a989-41b5-8fee-ea70f58e4f38" name="SOAPTestSuite">
    <con:settings/>
    <con:savedRecentRuns>1</con:savedRecentRuns>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="bd4b6aa8-b5a9-4253-95de-6c3029c9961f" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="SOAPTestCase" searchProperties="true" timeout="0">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="request" id="ba8b1173-cdf9-4bf0-9793-19a89790b0ee" name="addProfile">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>SoapWSImplPortBinding</con:interface>
          <con:operation>addProfile</con:operation>
          <con:request name="addProfile" id="3d8084eb-de98-4324-8911-d43a2aa77aac">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:9088/wss/profiles</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:apip="http://apiPractice.aplana.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <apip:addProfile>
         <!--Optional:-->
         <ProfileRq>
            <SurName>${#Project#surname}</SurName>
            <Name>${#Project#name}</Name>
            <!--Optional:-->
            
            <!--Optional:-->
            
            <!--Optional:-->
            <Birthday>${#Project#birthdate}</Birthday><Phone>${#Project#phone}</Phone>
            <E-mail>${#Project#email}</E-mail>
            <!--Optional:-->
            <Position>${#Project#position}</Position>
            <!--Zero or more repetitions:-->
            <Projects>
               <id>100666</id>
               <Name>${#Project#Projectname1}</Name><StartDate>${#Project#Startdate1}</StartDate>
               <!--Optional:-->
               
               <!--Optional:-->
               
               <!--Optional:-->
               
            </Projects>
         </ProfileRq>
      </apip:addProfile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="Valid HTTP Status Codes" id="d82310f2-46c6-44fc-969e-db48af54e1ec" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Schema Compliance" id="e3b69749-306b-48ca-85ee-9681764cc033" name="Schema Compliance">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:wsaConfig action="http://apiPractice.aplana.com/SoapWS/addProfileRequest" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy Script" id="3b5d1332-4fa0-45f2-a47e-c7c67142fa8b">
        <con:settings/>
        <con:config>
          <script>def response = context.expand('${addProfile#Response#declare namespace ns2=\'http://apiPractice.aplana.com/\';//ns2:addProfileResponse[1]/return[1]}}' )

def id = response.replaceAll("\\D+","")
testRunner.testCase.setPropertyValue('id',id)
log.info(id)</script>
        </con:config>
      </con:testStep>
      <con:testStep type="request" id="8967fc4c-56d6-43a3-b808-373242374f18" name="getProfile">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>SoapWSImplPortBinding</con:interface>
          <con:operation>getProfile</con:operation>
          <con:request name="getProfile" id="1ce88b67-1169-4510-93ce-2c7e09a04693">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:9088/wss/profiles</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:apip="http://apiPractice.aplana.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <apip:getProfile>
         <!--Optional:-->
         
      <arg0>${#TestCase#id}</arg0></apip:getProfile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="Valid HTTP Status Codes" id="6b7cd6cd-61e6-415a-9b81-db7127ddba49" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple Contains" id="c4fa7f95-0998-4a2b-9c95-fa6348ce539e" name="Contains">
              <con:configuration>
                <token>${#TestCase#id}</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple Contains" id="8031a4ed-0b13-49b1-a929-b8667982a912" name="Contains 2">
              <con:configuration>
                <token>${addProfile#Request#declare namespace apip='http://apiPractice.aplana.com/'; //apip:addProfile[1]/ProfileRq[1]/Name[1]}</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple Contains" id="2c781a78-4464-4d9a-b585-c9c086a77eea" name="Contains 3">
              <con:configuration>
                <token>${addProfile#Request#declare namespace apip='http://apiPractice.aplana.com/'; //apip:addProfile[1]/ProfileRq[1]/SurName[1]}</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple Contains" id="bdca172e-0186-4a56-91de-62d1043b3846" name="Contains 4">
              <con:configuration>
                <token>${addProfile#Request#declare namespace apip='http://apiPractice.aplana.com/'; //apip:addProfile[1]/ProfileRq[1]/Birthday[1]}</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple Contains" id="1aacca94-d29b-4bd3-a4ae-495edd1a029d" name="Contains 5">
              <con:configuration>
                <token>${addProfile#Request#declare namespace apip='http://apiPractice.aplana.com/'; //apip:addProfile[1]/ProfileRq[1]/Phone[1]}</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple Contains" id="214af84b-4c6a-448a-9117-3afeb644bd61" name="Contains 6">
              <con:configuration>
                <token>${addProfile#Request#declare namespace apip='http://apiPractice.aplana.com/'; //apip:addProfile[1]/ProfileRq[1]/E-mail[1]}</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple Contains" id="2ee0939b-830f-4ad6-888d-fb5ae0b132ed" name="Contains 7">
              <con:configuration>
                <token>${addProfile#Request#declare namespace apip='http://apiPractice.aplana.com/'; //apip:addProfile[1]/ProfileRq[1]/Position[1]}</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple Contains" id="0c12607a-1cf3-4726-aeca-9a7e0e3212c6" name="Contains 8">
              <con:configuration>
                <token>${addProfile#Request#declare namespace apip='http://apiPractice.aplana.com/'; //apip:addProfile[1]/ProfileRq[1]/Projects[1]/id[1]}</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple Contains" id="64900d9f-ee05-4dd0-8763-810b53a6247a" name="Contains 9">
              <con:configuration>
                <token>${addProfile#Request#declare namespace apip='http://apiPractice.aplana.com/'; //apip:addProfile[1]/ProfileRq[1]/Projects[1]/Name[1]}</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple Contains" id="90844f01-55d4-443e-9491-7e7922f15198" name="Contains 10">
              <con:configuration>
                <token>${addProfile#Request#declare namespace apip='http://apiPractice.aplana.com/'; //apip:addProfile[1]/ProfileRq[1]/Projects[1]/StartDate[1]}</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Schema Compliance" id="5cbc8f51-28f6-4999-a7b3-b7fd93ff3196" name="Schema Compliance">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:wsaConfig action="http://apiPractice.aplana.com/SoapWS/getProfileRequest" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="request" id="1a1d88db-2618-4201-8522-ceea7587af91" name="getProfileList">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>SoapWSImplPortBinding</con:interface>
          <con:operation>getProfileList</con:operation>
          <con:request name="getProfileList" id="80e8083c-4518-4dd5-b382-ae5dd9b66e0a">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:9088/wss/profiles</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:apip="http://apiPractice.aplana.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <apip:getProfileList/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="Valid HTTP Status Codes" id="d1099a41-7f39-4b82-9a8b-9495821d4204" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple Contains" id="bb97d92b-a80f-48f3-9671-f0fdf744bdcb" name="Contains">
              <con:configuration>
                <token>${#TestCase#id}</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Schema Compliance" id="f6b1db70-878c-4bb9-8bd0-e3ac48b44043" name="Schema Compliance">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:wsaConfig action="http://apiPractice.aplana.com/SoapWS/getProfileListRequest" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="request" id="34bab234-7258-4c2a-9025-077772a6b870" name="removeProfile">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>SoapWSImplPortBinding</con:interface>
          <con:operation>removeProfile</con:operation>
          <con:request name="removeProfile" id="57e59c48-bee2-4211-847c-d3f4d6a1fb7a">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:9088/wss/profiles</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:apip="http://apiPractice.aplana.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <apip:removeProfile>
         <!--Optional:-->
         
      <arg0>${#TestCase#id}</arg0></apip:removeProfile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="Valid HTTP Status Codes" id="5d781dd0-84d6-4740-a96f-3d0f4981a402" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Schema Compliance" id="7d4fd406-dbd5-4598-b5e4-2fbb189013a6" name="Schema Compliance">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:wsaConfig action="http://apiPractice.aplana.com/SoapWS/removeProfileRequest" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="request" id="9b369365-d9dc-4b34-9bae-a63616d46fa3" name="getProfile2">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>SoapWSImplPortBinding</con:interface>
          <con:operation>getProfile</con:operation>
          <con:request name="getProfile2" id="1ce88b67-1169-4510-93ce-2c7e09a04693">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:9088/wss/profiles</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:apip="http://apiPractice.aplana.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <apip:getProfile>
         <!--Optional:-->
         <arg0>${#TestCase#id}</arg0>
      </apip:getProfile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="Valid HTTP Status Codes" id="07e8ded0-5b02-4927-a9ff-0b382fe177f6" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple NotContains" id="d7e36917-bf65-4cd6-bf28-38e7d91c8e62" name="Not Contains">
              <con:configuration>
                <token>${#TestCase#id}</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Schema Compliance" name="Schema Compliance" id="d2653ee2-6b2a-49ad-94a3-9c1a570c7777">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Schema Compliance" name="Schema Compliance1">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:wsaConfig action="http://apiPractice.aplana.com/SoapWS/getProfileRequest" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="request" id="b07245dd-8603-46f5-a7db-3707de084397" name="getProfileList2">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>SoapWSImplPortBinding</con:interface>
          <con:operation>getProfileList</con:operation>
          <con:request name="getProfileList2" id="80e8083c-4518-4dd5-b382-ae5dd9b66e0a">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:9088/wss/profiles</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:apip="http://apiPractice.aplana.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <apip:getProfileList/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="Valid HTTP Status Codes" id="05a57d96-287f-4c39-89d6-d1c84892dec1" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple NotContains" id="378d415c-8312-4d14-9547-787c1dab8b0c" name="Not Contains">
              <con:configuration>
                <token>${#TestCase#id}</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Schema Compliance" name="Schema Compliance" id="aa33a37a-8e0e-4df7-952f-397b3294ae09">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Schema Compliance" name="Schema Compliance1">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:wsaConfig action="http://apiPractice.aplana.com/SoapWS/getProfileListRequest" mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>id</con:name>
          <con:value>100007</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:requirements/>
  <con:properties>
    <con:property>
      <con:name>Name</con:name>
      <con:value>ELCUCO</con:value>
    </con:property>
    <con:property>
      <con:name>Surname</con:name>
      <con:value>Cuco</con:value>
    </con:property>
    <con:property>
      <con:name>Birthdate</con:name>
      <con:value>2019-01-01T01:23:17.603+03:00</con:value>
    </con:property>
    <con:property>
      <con:name>Email</con:name>
      <con:value>elcuco2019@gmail.com</con:value>
    </con:property>
    <con:property>
      <con:name>Phone</con:name>
      <con:value>+79666666666</con:value>
    </con:property>
    <con:property>
      <con:name>Position</con:name>
      <con:value>Beast</con:value>
    </con:property>
    <con:property>
      <con:name>Projectname1</con:name>
      <con:value>Independent entrepreneur</con:value>
    </con:property>
    <con:property>
      <con:name>Startdate1</con:name>
      <con:value>2020-03-09T00:00:00+03:00</con:value>
    </con:property>
  </con:properties>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:xmlTemplates/>
    <con:parameters/>
  </con:reporting>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>
